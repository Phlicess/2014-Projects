<Page x:Class="SCZY.Accountant.OrderPrecedPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:common="clr-namespace:SCZY.Common"
      xmlns:otherWindows="clr-namespace:SCZY.OtherWindows"
      mc:Ignorable="d" Width="Auto" Height="Auto"
	  Title="OrderPricedPage">

    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Style/MainWinStyle.xaml"></ResourceDictionary>
                <ResourceDictionary Source="../Style/MainPageStyle.xaml"></ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
            <common:DateConverter x:Key="DataConverter" />
            <!--<DataTemplate x:Key="DateTemplate" >
                <StackPanel Orientation="Horizontal" Width="100">
                    <TextBlock Text="{Binding OrderDate, StringFormat={}{0:yyyy-}}" 
                    FontSize="13" HorizontalAlignment="Center"/>
                    <TextBlock Text="{Binding OrderDate, StringFormat={}{0:MM-dd}}" 
                    FontSize="13" HorizontalAlignment="Center"/>
                </StackPanel>
            </DataTemplate>
            <DataTemplate x:Key="EditingDateTemplate">
                <DatePicker SelectedDate="{Binding OrderDate}"/>
            </DataTemplate>-->
        </ResourceDictionary>
    </Page.Resources>

    <DockPanel>
        <!--查找工具栏-->
        <StackPanel Width="Auto" Height="30" Margin="0 -30 0 0" DockPanel.Dock="Top" Orientation="Horizontal" HorizontalAlignment="Right">
            <TextBox Name="SeacherBox" KeyUp="SeacherBox_OnKeyUp" VerticalContentAlignment="Center" Width="140" Height="20" />
            <Image Name="SeacherBtn_Mo" Height="30" Width="30" Source="../Images/Seacher_Mo.png">
                <Image.Style>
                    <Style TargetType="Image">
                        <Setter Property="Opacity" Value="1"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="HorizontalAlignment" Value="Right"/>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Cursor" Value="Hand"/>
                                <Setter Property="Opacity" Value="0"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Image.Style>
            </Image>
            <Image Name="SeacherBtn" ToolTip="查找" MouseLeftButtonUp="SeacherBtn_OnMouseLeftButtonUp" Height="30" Width="30" Margin="-30 0 0 0" Source="../Images/Seacher.png">
                <Image.Style>
                    <Style TargetType="Image">
                        <Setter Property="Opacity" Value="0"/>
                        <Setter Property="HorizontalAlignment" Value="Right"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Cursor" Value="Hand"/>
                                <Setter Property="Opacity" Value="1"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Image.Style>
            </Image>

            <Image Name="ResetBtn_Mo" Height="30" Width="30" Source="../Images/Reset.png">
                <Image.Style>
                    <Style TargetType="Image">
                        <Setter Property="Opacity" Value="1"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="HorizontalAlignment" Value="Right"/>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Cursor" Value="Hand"/>
                                <Setter Property="Opacity" Value="0"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Image.Style>
            </Image>
            <Image Name="ResetBtn" ToolTip="重置" MouseLeftButtonUp="ResetBtn_OnMouseLeftButtonUp" Height="30" Width="30" Margin="-30 0 15 0" Source="../Images/Reset_Mo.png">
                <Image.Style>
                    <Style TargetType="Image">
                        <Setter Property="Opacity" Value="0"/>
                        <Setter Property="HorizontalAlignment" Value="Right"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Cursor" Value="Hand"/>
                                <Setter Property="Opacity" Value="1"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Image.Style>
            </Image>
        </StackPanel>
        <!--这里是工具栏ToolBar *添加订单* *修改订单* *删除订单*-->
        <!--
        <ToolBar Style="{StaticResource {x:Type ToolBar}}" DockPanel.Dock="Top" Height="30" ToolBarTray.IsLocked="true">
            <Border BorderThickness="0 0 1 0" BorderBrush="#d9dadf">
                <DockPanel Name="NewOrderBtn" Style="{StaticResource ToolBarBtnStyle}">
                    <Image Source="../Images/ToolBarNew.png" Width="30" Height="30" />
                    <TextBlock Text="添加订单" Style="{StaticResource ToolBarFontStyle}" MouseEnter="OnFontColorAnimate" MouseLeave="OutFontColorAnimate" />
                </DockPanel>
            </Border>
            <Border BorderThickness="0 0 1 0" BorderBrush="#d9dadf">
                <DockPanel Name="EditOrderBtn" FocusManager.IsFocusScope="True" Style="{StaticResource ToolBarBtnStyle}">
                    <Image Source="../Images/ToolBarNew.png" Width="30" Height="30" />
                    <TextBlock Text="修改订单" Style="{StaticResource ToolBarFontStyle}" MouseEnter="OnFontColorAnimate" MouseLeave="OutFontColorAnimate" />
                </DockPanel>
            </Border>
            <Border BorderThickness="0 0 1 0" BorderBrush="#d9dadf">
                <DockPanel Name="DeleteOrderBtn" FocusManager.IsFocusScope="True" Style="{StaticResource ToolBarBtnStyle}">
                    <Image Source="../Images/ToolBarNew.png" Width="30" Height="30" />
                    <TextBlock Text="删除订单" Style="{StaticResource ToolBarFontStyle}" MouseEnter="OnFontColorAnimate" MouseLeave="OutFontColorAnimate" />
                </DockPanel>
            </Border>
        </ToolBar>-->

        <!--这里是DataGrid *未划价的订单*-->
        <DataGrid BorderThickness="0" DockPanel.Dock="Top" x:Name="PendingOrder" Background="White" 
                  SelectionMode="Single" AutoGenerateColumns="False" RowHeaderWidth="0"
                  GridLinesVisibility="None" Foreground="#868686" FontSize="13" ItemsSource="{Binding}"
                  CanUserAddRows="False" CanUserReorderColumns="True" FrozenColumnCount="2"
                  >
            <DataGridColumnHeader>
                <Style TargetType="DataGridColumnHeader">
                    <Setter Property="HorizontalAlignment" Value="Center" />
                </Style>
            </DataGridColumnHeader>
            <!--定义行和cell的样式-->
            <DataGrid.CellStyle>
                <Style TargetType="DataGridCell">
                    <Setter Property="BorderThickness" Value="0 0 0 1" />
                    <Setter Property="BorderBrush" Value="#fff" />
                    <Style.Triggers >
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="BorderThickness" Value="0 0 0 1" />
                            <Setter Property="Background" Value="#72aee0" />
                        </Trigger>
                        <!--<Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderThickness" Value="1" />
                            <Setter Property="BorderBrush" Value="#72aee0" />
                        </Trigger>-->
                    </Style.Triggers>
                </Style>
            </DataGrid.CellStyle>
            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Setter Property="BorderBrush" Value="#d5d6db" />
                    <Setter Property="BorderThickness" Value="0 0 0 1" />
                    <Setter Property="HorizontalAlignment" Value="Center" />
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="BorderThickness" Value="0 0 0 1" />
                            <Setter Property="BorderBrush" Value="#72aee0" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="#72aee0" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.ContextMenu>
                <ContextMenu Name="DataGridContextMenu" StaysOpen="true">
                    <!--<MenuItem Header="定价" Click="MenuItemfFixPrices_OnClick"/>-->
                    <MenuItem Header="修改单价" Click="EditOrder"/>
                    <MenuItem Header="打印订单" Click="PrintOrder"/>
                </ContextMenu>
            </DataGrid.ContextMenu>

            <DataGrid.Columns>
                <DataGridTextColumn Header="订单号" Width="*" Binding="{Binding ID}" IsReadOnly="True" />
                <DataGridTextColumn Header="是否划价" Width="*" Binding="{Binding OrderState, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True" />
                <DataGridTextColumn Header="客户姓名" Width="*" Binding="{Binding ConsumerName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True" />
                <!--<DataGridTextColumn Header="吨数" Binding="{Binding Weight, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True" />-->
                <DataGridTextColumn Header="已付款" Width="*" Binding="{Binding Paid, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True" />
                <DataGridTextColumn Header="订单总额" Width="*" Binding="{Binding AggregateAmount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True" />
                <DataGridTextColumn Header="下单日期" Width="*" Binding="{Binding TakeDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0:yyyy-MM-dd}}" IsReadOnly="True" />
                <DataGridTextColumn Header="截止日期" Width="*" Binding="{Binding TakeDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0:yyyy-MM-dd}}" IsReadOnly="True" />
                <DataGridTextColumn Header="发货日期" Width="*" Binding="{Binding DeliveryDate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0:yyyy-MM-dd}}" IsReadOnly="True" />                
                <DataGridTextColumn Header="送货方式" Width="*" Binding="{Binding Dispatch, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True" />
                <DataGridTextColumn Header="是否加急" Width="*" Binding="{Binding Urgent, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource DataConverter}}" IsReadOnly="True" />
                <DataGridTextColumn Header="联系电话" Width="1.5*" Binding="{Binding Phone, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True" />
                <DataGridTextColumn Header="备注" Width="*" Binding="{Binding Remark, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True" />
            </DataGrid.Columns>
        </DataGrid>
        <otherWindows:DataGridPager x:Name="gridPager" DockPanel.Dock="Bottom" Margin="20 0 0 0" VerticalAlignment="Bottom" />
    </DockPanel>
</Page>
